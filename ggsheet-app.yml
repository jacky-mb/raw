version: "3.8"

services:
  mysqldb:
    container_name: mysqldb
    platform: linux/x86_64
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - "3306:3306"
    volumes:
      - db:/var/lib/mysql
    networks:
        - internal
  app:
    container_name: app
    depends_on:
      - mysqldb
    image: jacky36195/auto:latest
#    build:
#      context: ./backend
#      dockerfile: Dockerfile_supervisord
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "6789:8080"
      - "8888:8888"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:mysql://mysqldb:3306/${MYSQLDB_DATABASE}?useSSL=false&serverTimezone=UTC",
        "spring.datasource.username": "${MYSQLDB_USER}",
        "spring.datasource.password": "${MYSQLDB_ROOT_PASSWORD}",
        "spring.datasource.driver-class-name": "com.mysql.cj.jdbc.Driver",
        "spring.datasource.hikari.connection-timeout": 300000,
        "spring.datasource.hikari.maximum-pool-size": 10,
        "spring.jpa.hibernate.ddl-auto": "create-drop",
        "spring.jpa.show-sql": false,
        "spring.jpa.properties.hibernate.format_sql": true,
        "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.MySQL5Dialect",
        "spring.jpa.database": "mysql",
        "spring.jpa.database-platform": "org.hibernate.dialect.MySQL5Dialect",
        "spring.application.name": "auto-app",
        "application.security.jwt.secret-key": "${APPLICATION_SECURITY_JWT_SECRET_KEY}",
        "application.security.jwt.expiration": 31536000000,
        "application.security.jwt.refresh-token.expiration": 31536000000,
        "logstash.host": "logstash-sv",
        "logstash.port": "5000",
        "slack.token": "${SLACK_TOKEN}",
        "slack.channel-id": "${SLACK_CHANNEL_ID}"
      }'
    volumes:
      - $HOME/.m2:/root/.m2
    stdin_open: true
    tty: true
    networks:
      - internal

volumes:
  db:
networks:
  internal:
